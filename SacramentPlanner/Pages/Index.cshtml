@page
@model SacramentPlanner.Pages.IndexModel

@{
	ViewData["Title"] = "Index";
}

<h1>All Meeting Plans</h1>

<p>
	<a asp-page="Create" class="btn btn-primary"><i class="fa-solid fa-plus"></i>Add New</a>
</p>


<div class="w-50 mx-auto">
	<form>
		<div class="form-group row">
			<div class="col-md-4">
				<label for="NameSearchString">Search Speaker:</label>
				<input type="text" class="form-control form-control-sm" id="NameSearchString" asp-for="NameSearchString" placeholder="Enter a name">
			</div>
			<div class="col-md-4">
				<label for="TopicSearchString">Search Topic:</label>
				<input type="text" class="form-control form-control-sm" id="TopicSearchString" asp-for="TopicSearchString" placeholder="Enter a topic">
			</div>
			<div class="col-md-4">
				<label for="SortOption">Sort By:</label>
				<select class="form-control form-control-sm" id="SortOption" asp-for="SortOption" asp-items="Model.SortOptions">
					<option value="">None</option>
				</select>
			</div>
		</div>
		<div class="text-center">
			<button type="submit" class="btn btn-primary mt-2">Apply</button>
		</div>
	</form>
</div>





<form id="sort-filter">
	@* TODO: Add sort/filtering here *@
</form>

<table class="table table-striped table-hover">
	<thead class="bg-primary text-light">
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Meeting[0].WardName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Meeting[0].Date)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Meeting[0].Conductor)
			</th>
			<th>Music</th>
			<th>Prayers</th>
			<th>
				@Html.DisplayNameFor(model => model.Meeting[0].TalksList)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Meeting)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.WardName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Date)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Conductor)
				</td>
				<td>
					<div>Opening: #@Html.DisplayFor(modelItem => item.OpeningHymn)</div>
					<div>Sacrament: #@Html.DisplayFor(modelItem => item.SacramentHymn)</div>
					@* TODO: Display rest/special only if they exist *@
					<div>Rest: #@Html.DisplayFor(modelItem => item.RestHymn)</div>
					<div>Special: @Html.DisplayFor(modelItem => item.SpecialMusicalNumber)</div>
					<div>Closing: #@Html.DisplayFor(modelItem => item.ClosingHymn)</div>
				</td>
				<td>
					<div>Opening: @Html.DisplayFor(modelItem => item.OpeningPrayer)</div>
					<div>Closing: @Html.DisplayFor(modelItem => item.ClosingPrayer)</div>
				</td>
				<td>
					<ul>
						@foreach (var talk in item.TalksList)
						{
							<li>@talk.SpeakerName - @talk.Topic</li>
						}
					</ul>
				</td>
				<td>
					@* Extra nesting because putting this class on the td looked funny *@
					<div class="btn-group-vertical">
						<a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-outline-primary"><i class="fa-solid fa-pen-to-square"></i>Edit</a>
						<a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-outline-primary"><i class="fa-solid fa-print"></i>Print</a>
						<a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-outline-danger"><i class="fa-solid fa-trash"></i>Delete</a>
					</div>
				</td>
			</tr>
		}
	</tbody>
</table>
